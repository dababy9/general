; Generated by SPL Compiler

target triple = "x86_64-pc-linux-gnu"

declare i32 @printf(ptr, ...)

declare i32 @scanf(ptr)

@printLong = constant [4 x i8] c"%d\0A\00"

@scanLong = constant [2 x i8] c"%d"

define i32 @main() {
    ; Begin New Statment
  %r001 = ptrtoint ptr @fun1 to i64
  %r002 = alloca i64
  store i64 %r001, ptr %r002
  %r003 = ptrtoint ptr %r002 to i64
    ; End New Statement
    ; Using variable
  %r005 = inttoptr i64 %r003 to ptr
  %r006 = load i64, ptr %r005
  %r004 = inttoptr i64 %r006 to ptr
  %r007 = call i64 %r004(i64 3)
    ; write statement
  call i32 @printf(ptr @printLong, i64 %r007)
  ret i32 0
}
define i64 @fun1 (i64 %arg) {
  %r008 = alloca i64
  store i64 %arg, ptr %r008
  %r009 = ptrtoint ptr %r008 to i64
    ; Using variable
  %r010 = inttoptr i64 %r009 to ptr
  %r011 = load i64, ptr %r010
    ; write statement
  call i32 @printf(ptr @printLong, i64 %r011)
    ; Begin Assignment Statment
